
// function bar(){
//   var myName = 'chonge'
//   let test1 = 100
//   if(1){
//     let myName = 'tao'
//     console.log(test); // 1
//   }
// }

// function foo(){
//   var myName = 'jiushen'
//   let test = 2
//   {
//     let test = 3
//     bar()
//   }
// }

// var myName = 'huyi'
// let myAge = '10'
// let test = 1
// foo()

// 闭包定义：在js中，根据词法作用域的规则，内部函数总是可以访问外部函数声明的变量，
// 当通过一个外部函数返回一个内部函数后，即使该外部函数已经执行结束，但是内部函数引用外部函数的变量依然保存在内存中
// 我们称这些变量为闭包的产物，这些变量的集合就叫闭包

// 闭包是怎么回收的
// 1. 如果引用闭包的函数是一个全局变量，那么这个闭包就会一直存在，直到页面关闭
// 2. 如果引用闭包的函数是一个局部变量，等函数销毁后，在下一次js引擎执行垃圾回收时，判断闭包不再引用使用了才被回收